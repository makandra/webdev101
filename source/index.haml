!!!
%html{:lang => "en"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %meta{:charset => "utf-8"}/
    %title Web development 101
    %meta{:content => "yes", :name => "apple-mobile-web-app-capable"}/
    %meta{:content => "black-translucent", :name => "apple-mobile-web-app-status-bar-style"}/
    %meta{:content => "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui", :name => "viewport"}/
    %link{:href => "css/reveal.css", :rel => "stylesheet"}/
    %link#theme{:href => "css/theme/blood.css", :rel => "stylesheet"}/
    %link{:href => "css/custom.css", :rel => "stylesheet"}/
    / Code syntax highlighting
    %link{:href => "lib/css/tomorrow-night-bright.css", :rel => "stylesheet"}/
    / Printing and PDF exports
    :javascript
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
      document.getElementsByTagName( 'head' )[0].appendChild( link );
    /[if lt IE 9]
      <script src="lib/js/html5shiv.js"></script>
  %body
    .reveal
      / Any section element inside of this container is displayed as a slide
      .slides

        %section
          %h2 Web development <span class="red">101</span>
          -#%h3
          -#  %a.no-underline{:href => "https://twitter.com/triskweline"} Henning Koch
          -#  %br
          -#  %a.no-underline{:href => "https://makandra.de"} makandra GmbH


        %section
          %img(src='pictures/henning.jpg' height=300)

          %p
            %b Henning Koch
            %br
            Head of Development at
            %a(href='https://makandra.de/') makandra
            %br
            -#%a(href='mailto:henning.koch@makandra.de') henning.koch@makandra.de
            -#%br
            %a(href='https://twitter.com/triskweline') @triskweline

        -#%section
        -#  %img(src='pictures/makandra/aiti-park.jpg' height=600)
        -#
        -#%section
        -#  %img(src='pictures/makandra/makandra_office_entrance.jpg' height=600)
        -#
        -#%section
        -#  %img(src='pictures/makandra/dominik.jpg' height=600)
        -#
        -#%section
        -#  %img(src='pictures/makandra/explaining2.jpg' height=600)
        -#
        -#%section
        -#  %img(src='pictures/makandra/desktop.jpg' height=600)
        -#
        -#%section
        -#  %img(src='pictures/makandra/andy.jpg' height=600)
        -#
        -#%section
        -#  %img(src='pictures/makandra/conference.jpg' height=600)
        -#
        -#%section
        -#  %img(src='pictures/makandra/crunch_rw.jpg' height=600)
        -#
        -#%section
        -#  %img(src='pictures/makandra/lunch.jpg' height=600)
        -#
        -#%section
        -#  %table.team
        -#    %tr
        -#      %td
        -#        %img(src='pictures/team/andrea_biber.jpg')
        -#      %td
        -#        %img(src='pictures/team/andreas_herz.jpg')
        -#      %td
        -#        %img(src='pictures/team/andreas_robecke.jpg')
        -#      %td
        -#        %img(src='pictures/team/arne_hartherz.jpg')
        -#      %td
        -#        %img(src='pictures/team/claus-theodor_riegg.jpg')
        -#    %tr
        -#      %td
        -#        %img(src='pictures/team/daniel_strassner.jpg')
        -#      %td
        -#        %img(src='pictures/team/dominik_schoeler.jpg')
        -#      %td
        -#        %img(src='pictures/team/judith_roth.jpg')
        -#      %td
        -#        %img(src='pictures/team/emanuel_denzel.jpg')
        -#      %td
        -#        %img(src='pictures/team/henning_koch.jpg')
        -#
        -#    %tr
        -#      %td
        -#        %img(src='pictures/team/kim_jahn.jpg')
        -#      %td
        -#        %img(src='pictures/team/magnus_goerlitz.jpg')
        -#      %td
        -#        %img(src='pictures/team/marius_schuller.jpg')
        -#      %td
        -#        %img(src='pictures/team/michael_leimstaedtner.jpg')
        -#      %td
        -#        %img(src='pictures/team/florian_heinle.jpg')
        -#
        -#    %tr
        -#      %td
        -#        %img(src='pictures/team/natalie_krehan.jpg')
        -#      %td
        -#        %img(src='pictures/team/simone_achim.jpg')
        -#      %td
        -#        %img(src='pictures/team/thomas_eisenbarth.jpg')
        -#      %td
        -#        %img(src='pictures/team/tobias_kraze.jpg')
        -#      %td.fragment
        -#        %img(src='pictures/team/puppet.jpg')
        -#
        -#%section
        -#  %p
        -#    %img.plain(src='pictures/makandra/makandra-inverted.png' width='40%')
        -#
        -#  %p
        -#    Du hast Programmiererfahrung und möchtest
        -#    %br
        -#    Dein Studium mit Praxiserfahrung kombinieren?
        -#
        -#  %ul
        -#    %li
        -#      Abschlussarbeiten im Bereich Ruby, Web &amp; Operations
        -#    %li
        -#      Praktikum / Werkstudent
        -#    %li
        -#      Trainee-Programm
        -#      (<a href="http://start.makandra.de">start.makandra.de</a>)
        -#    %li
        -#      Reinschnuppern
        -#
        -#  %p
        -#    ➜
        -#    %a(href="mailto:info@makandra.de") info@makandra.de
        -#    (oder mich ansprechen)


        %section
          %h2 Web applications?

        %section
          %img(src='pictures/example_gmail.jpg' style='max-height: 600px')

        %section
          %img(src='pictures/example_spreadsheets.png' style='max-width: 100%')

        %section
          %img(src='pictures/example_slack.png' style='max-width: 100%')

        %section
          %img(src='pictures/example_airbnb.png' style='max-width: 100%')

        -# %section
        -#   %img(src='pictures/example_website.png' style='max-width: 100%')


        %section
          %img(src='pictures/example_spotify.png' style='max-width: 100%')

        -#%section
        -#  %h2 This is a course for beginners
        -#
        -#  %p.fragment
        -#    Who has made a static website?
        -#
        -#  %p.fragment
        -#    Who has worked on a web application?

        %section
          %h2 Native apps <span class="red">vs.</span> web apps

        %section
          %h2 Native applications

          %p
            Entire app runs on a single computer
          %p
            Entire app is (often) written in a single language
            %br
            %span.subtle
              Popular languages: Java, C#, C++, Objective-C

        %section
          %h2
            Web applications

          %p
            Application runs on multiple computers
            %br
            %span.subtle
              Typical: One server, many clients (= web browsers)

          %p
            Client and server run different parts of the application
            %br
            %span.subtle
              and they communicate over HTTP

          %p
            Application is written in a "stack" of many technologies
            %br
            %span.subtle
              Typical stack: HTML, CSS, JavaScript, Ruby/Node/Java/C#, SQL

        %section
          %table
            %tr
              %th
                Language
              %th
                Purpose
              %th
                Runs where?
            %tr
              %td
                HTML
              %td
                Content
              %td
                Client
            %tr
              %td
                CSS
              %td
                Layout & Design
              %td
                Client
            %tr
              %td
                JavaScript
              %td
                Client-side interaction
              %td
                Client
            %tr
              %td
                HTTP
              %td
                Client/server communication
              %td Client/server
            %tr
              %td
                Ruby/Node/Java/C#
              %td
                Controller & Model
              %td
                Server
            %tr
              %td
                SQL
              %td
                Database access
              %td
                Server


        %section
          %h2 In 2025 web apps are the dominant form of user-facing applications

          %ul.fragment
            %li
              Can be used from any device with a web browser
              %br
              %span.subtle
                (Windows, Linux, macOS, Android, iOS, ...)
            %li
              No installation
              %br
              %span.subtle
                Web browser downloads and "installs" a fresh copy every time
                you visit a website
            %li Is always the latest version
            %li Inherently multi-user
            %li
              Gets better every year (vs. native apps)
              .subtle
                File access, offline, audio processing, 3D graphics, USB devices...

        %section
          %h2 Today

          %ul
            %li HTML &amp; HTTP
            %li CSS
            %li Layout with Flexbox
            %li(style='color: #ee9955') Break
            %li Server-side web apps
            %li JavaScript
            %li Client-side web apps (SPAs)
            %li(style='color: #ee9955') Discussion / end

          %br
          %br

          %h4 Read along

          %p
            %a(href='http://webdev101.makandra.de') http://webdev101.makandra.de<br>
            %a(href='https://github.com/makandra/webdev101') https://github.com/makandra/webdev101

        %section(data-background-color='var(--color-galaxy)')
          .s
            %h2
              HTML<br />
              %span.subtle Hypertext Markup Language
            %h2
              HTTP<br />
              %span.subtle Hypertext Transfer Protocol


        %section

          %h2 HTML

          .columns
            .column

              %pre
                %code.html(data-trim)
                  :preserve
                    &lt;html&gt;
                      &lt;body&gt;
                        &lt;h1&gt;Hi there!&lt;/h1&gt;
                        &lt;p&gt;Look at this image:&lt;/p&gt;
                        &lt;img src="image.jpg"&gt;
                      &lt;/body&gt;
                    &lt;/html&gt;
              %p.fragment
                %a(target='_blank' href='examples/1010_request_response/') View example
                %br
                %span.subtle
                  (use the inspector)

            .column
              %img(src='pictures/screenshot_request_response.png' width=400)


        %section

          %h2 HTTP

          %p
            User enters into her browser's address bar:

          %pre
            %code.nohighlight(data-trim)
              :preserve
                http://makandra.com/page.html

          %p
            What happens?

        %section

          %p
            Browser asks server:

          %pre.xs.fragment
            %code.nohighlight(data-trim)
              :preserve
                GET /page.html HTTP/1.1        # I want the file /page.html
                Host: makandra.com             # I want it from makandra.com
                Accept: text/html, text/plain  # I understand HTML and plain text

          %p.fragment
            Server looks for a local file <code>page.html</code> and replies:

          %pre.xs.fragment
            %code.nohighlight(data-trim)
              :preserve
                HTTP/1.1 200 OK                # I found what you wanted
                Content-Length: 114            # What you want has 114 bytes
                Content-Type: text/html        # And it's in HTML format
                                               # Here it comes:
                &lt;html&gt;
                  &lt;body&gt;
                    &lt;h1&gt;Hi there!&lt;/h1&gt;
                    &lt;p&gt;Look at this image:&lt;/p&gt;
                    &lt;img src="image.jpg"&gt;
                  &lt;/body&gt;
                &lt;/html&gt;

        %section
          %p
            The browser parses the HTML and encounters this tag:

          %pre
            %code.html(data-trim)
              :preserve
                &lt;img src="image.jpg"&gt;

          %p
            What happens?


        %section

          %p
            Browser asks server:

          %pre.xs.fragment
            %code.nohighlight(data-trim)
              :preserve
                GET /image.jpg HTTP/1.1        # I want the file /image.jpg
                Host: makandra.com             # I want it from makandra.com
                Accept: image/jpeg, image/png  # I understand JPEG and PNG

          %p.fragment
            Server looks for a local file <code>image.jpg</code> and replies:

          %pre.xs.fragment
            %code.nohighlight(data-trim)
              :preserve
                HTTP/1.1 200 OK                # I found what you wanted
                Content-Length: 67840          # What you want has 66 KB
                Content-Type: image/jpeg       # And it's in JPEG format
                                               # Here it comes:
                FF D8 FF E0 00 10 4A 46
                49 46 00 01 01 01 00 48
                00 48 00 00 FF E1 1C 13
                45 78 69 66 00 00 49 49
                2A 00 08 00 00 00 0D 00
                0F 01 02 00 06 00 00 00
                ...


        %section
          %h2 HTML
          %ul
            %li
              %a(target='_blank' href='examples/1015_more_tags') More tags and hyperlinks
            %li
              %a(target='_blank' href='examples/1030_form/page.html') Form controls
            %li
              %a(target='_blank' href='examples/1020_video') Video & fallbacks
            %li
              %a(target='_blank' href='examples/1025_table/page.html') Table


        %section(data-background-color='var(--color-galaxy)')
          %h2
            CSS<br />
            %span.subtle Cascading Style Sheets

        %section
          .columns
            .column
              %h2 HTML
              %pre
                %code.html(data-trim)
                  :preserve
                    &lt;html&gt;
                      &lt;body&gt;
                        &lt;h1&gt;About Capybaras&lt;/h1&gt;
                        &lt;p&gt;
                          The capybara is the
                          <b>largest</b> rodent
                          in the world.
                        &lt;/p&gt;
                      &lt;/body&gt;
                    &lt;/html&gt;
                    &nbsp;
                    &nbsp;

            .column.fragment
              %h2 Browser
              %img(src='pictures/screenshot_simple_css.png' height=300)

          %p.center(style='visibility: hidden')
            %a(target='_blank' href='examples/1045_simple_css/page.html') View both together

        %section
          .columns
            .column
              %h2 HTML
              %pre
                %code.html(data-trim)
                  :preserve
                    &lt;html&gt;
                      &lt;body&gt;
                        &lt;h1&gt;About Capybaras&lt;/h1&gt;
                        &lt;p&gt;
                          The capybara is the
                          <b>largest</b> rodent
                          in the world.
                        &lt;/p&gt;
                      &lt;/body&gt;
                    &lt;/html&gt;
                    &nbsp;
                    &nbsp;

            .column
              %h2 CSS
              %pre
                %code.css(data-trim)
                  :preserve
                    body {
                      font-family: 'Arial';
                    }

                    h1 {
                      text-transform: uppercase;
                      font-style: italic;
                    }

                    b {
                      background-color: #ff9900;
                    }

          %p.center.fragment
            %a(target='_blank' href='examples/1045_simple_css/page.html') View both together

        %section
          %h2 Colors in CSS

          .columns
            .column
              %div(style='font-weight: bold; color: #ff0000') <code>#ff0000</code>
              %div(style='font-weight: bold; color: #00ff00') <code>#00ff00</code>
              %div(style='font-weight: bold; color: #0000ff') <code>#0000ff</code>
              %div(style='font-weight: bold; color: #ffff00') <code>#ffff00</code>
              %div(style='font-weight: bold; color: #ffffff') <code>#ffffff</code>
              %div(style='font-weight: bold; color: #000000') <code style="background-color: #444444">#000000</code>
              %div(style='font-weight: bold; color: #ff9900') <code>#ff9900</code>
              %div(style='font-weight: bold; color: #4488bb') <code>#4488bb</code>
              %div(style='font-weight: bold; color: #9900ff') <code>#9900ff</code>
              %div(style='font-weight: bold; color: #777777') <code>#777777</code>
              %div(style='font-weight: bold; color: #22aa88') <code>#22aa88</code>
              %div(style='font-weight: bold; color: #885555') <code>#885555</code>
            .column
              %div(style='font-weight: bold; color: red') <code>red</code>
              %div(style='font-weight: bold; color: yellow') <code>yellow</code>
              %div(style='font-weight: bold; color: fuchsia') <code>fuchsia</code>
              %div(style='font-weight: bold; color: rebeccapurple') <code>rebeccapurple</code>
              %div(style='font-weight: bold; color: rgba(255, 0, 0, 1.0)') <code>rgba(255, 0, 0, 1.0)</code>
              %div(style='font-weight: bold; color: rgba(255, 0, 0, 0.75)') <code>rgba(255, 0, 0, 0.75)</code>
              %div(style='font-weight: bold; color: rgba(255, 0, 0, 0.5)') <code>rgba(255, 0, 0, 0.5)</code>
              %div(style='font-weight: bold; color: rgba(255, 0, 0, 0.25)') <code>rgba(255, 0, 0, 0.25)</code>
              %div(style='font-weight: bold; color: hsl(0, 100%, 50%)') <code>hsl(0, 100%, 50%)</code>
              %div(style='font-weight: bold; color: hsl(30, 100%, 50%)') <code>hsl(30, 100%, 50%)</code>
              %div(style='font-weight: bold; color: hsl(30, 50%, 50%)') <code>hsl(30, 50%, 50%)</code>
              %div(style='font-weight: bold; color: hsl(30, 50%, 70%)') <code>hsl(30, 50%, 70%)</code>


        %section
          %h2
            How to link HTML and CSS
            %span.subtle (1)

          %pre
            %code.html(data-trim)
              :preserve
                &lt;html&gt;
                  &lt;head&gt;
                    &lt;style&gt;
                      h1 {
                        color: #ff0000;
                      }
                    &lt;/style&gt;
                  &lt;/head&gt;
                  &lt;body&gt;
                    ...
                  &lt;/body&gt;
                &lt;/html&gt;

        %section
          %h2
            How to link HTML and CSS
            %span.subtle (2)

          %pre
            %code.html(data-trim)
              :preserve
                &lt;html&gt;
                  &lt;head&gt;
                    &lt;link rel="stylesheet" href="styles.css"&gt;




                  &lt;/head&gt;
                  &lt;body&gt;
                    ...
                  &lt;/body&gt;
                &lt;/html&gt;

        %section
          %p
            The browser parses the HTML and encounters this tag:

          %pre
            %code.html(data-trim)
              :preserve
                &lt;link rel="stylesheet" href="styles.css"&gt;

          %p
            What happens?


        %section

          %p
            Browser asks server:

          %pre.xs.fragment
            %code.nohighlight(data-trim)
              :preserve
                GET /styles.css HTTP/1.1       # I want the file /styles.css
                Host: makandra.com             # I know you as makandra.com
                Accept: text/css               # I understand the CSS format

          %p.fragment
            Server looks for a local file <code>styles.css</code> and replies:

          %pre.xs.fragment
            %code.nohighlight(data-trim)
              :preserve
                HTTP/1.1 200 OK                # I found what you wanted
                Content-Length: 182            # What you want has 182 bytes
                Content-Type: text/css         # And it's in CSS format
                                               # Here it comes:
                body {
                  font-family: 'Arial';
                }

                h1 {
                  text-transform: uppercase;
                  font-style: italic;
                }

                ...

        %section
          %p
            %a(href='https://developer.chrome.com/docs/devtools/network/') DevTools Network Tab


        %section

          %h2 An advanced CSS example

          %img(src='pictures/screenshot_pretty_button.png' height=150)

          %p
            %a(target='_blank' href='examples/1050_css_button/page.html') View example


        %section
          .subtle (Time check 25%)


        %section
          %h2 Selectors

          %pre
            %code.css(data-trim)
              :preserve
                body {
                  font-family: 'Arial';
                }

                h1 {
                  text-transform: uppercase;
                  font-style: italic;
                }

                b {
                  background-color: #ff0000;
                }

        %section
          %h2 Selectors

          %pre
            %code.css(data-trim data-noescape)
              :preserve
                <em>body</em> {
                  font-family: 'Arial';
                }

                <em>h1</em> {
                  text-transform: uppercase;
                  font-style: italic;
                }

                <em>b</em> {
                  background-color: #ff0000;
                }

        %section
          %h2 &nbsp;

          %div
            %code.html(data-trim)
              <br />
              &lt;h1&gt;About Capybaras&lt;/h1&gt;<br />
              <br />
              &lt;p class="introduction"&gt;<br />
              &nbsp;&nbsp;The <span class="foo">capybara</span> is the largest &lt;b&gt;rodent&lt;/b&gt;<br />
              &nbsp;&nbsp;in the world.<br />
              &lt;/p&gt;<br />
              <br />
              &lt;p&gt;<br />
              &nbsp;&nbsp;The &lt;i&gt;capybara&lt;/i&gt; belongs to the subfamily<br />
              &nbsp;&nbsp;&lt;b&gt;Hydrochoerinae&lt;/b&gt; along with ...<br />
              &lt;/p&gt;

        %section
          %h2
            %code h1 { ... }

          %div
            %code(data-trim)
              <br />
              %em
                &lt;h1&gt;About Capybaras&lt;/h1&gt;<br />
              <br />
              &lt;p class="introduction"&gt;<br />
              &nbsp;&nbsp;The <span class="foo">capybara</span> is the largest &lt;b&gt;rodent&lt;/b&gt;<br />
              &nbsp;&nbsp;in the world.<br />
              &lt;/p&gt;<br />
              <br />
              &lt;p&gt;<br />
              &nbsp;&nbsp;The &lt;i&gt;capybara&lt;/i&gt; belongs to the subfamily<br />
              &nbsp;&nbsp;&lt;b&gt;Hydrochoerinae&lt;/b&gt; along with ...<br />
              &lt;/p&gt;

        %section
          %h2
            %code p { ... }

          %div
            %code(data-trim)
              <br />
              &lt;h1&gt;About Capybaras&lt;/h1&gt;<br />
              <br />
              %em
                &lt;p class="introduction"&gt;<br />
                &nbsp;&nbsp;The <span class="foo">capybara</span> is the largest &lt;b&gt;rodent&lt;/b&gt;<br />
                &nbsp;&nbsp;in the world.<br />
                &lt;/p&gt;<br />
                <br />
                &lt;p&gt;<br />
                &nbsp;&nbsp;The &lt;i&gt;capybara&lt;/i&gt; belongs to the subfamily<br />
                &nbsp;&nbsp;&lt;b&gt;Hydrochoerinae&lt;/b&gt; along with ...<br />
                &lt;/p&gt;

        %section
          %h2
            %code p.introduction { ... }

          %div
            %code(data-trim)
              <br />
              &lt;h1&gt;About Capybaras&lt;/h1&gt;<br />
              <br />
              %em
                &lt;p class="introduction"&gt;<br />
                &nbsp;&nbsp;The <span class="foo">capybara</span> is the largest &lt;b&gt;rodent&lt;/b&gt;<br />
                &nbsp;&nbsp;in the world.<br />
                &lt;/p&gt;<br />
              <br />
              &lt;p&gt;<br />
              &nbsp;&nbsp;The &lt;i&gt;capybara&lt;/i&gt; belongs to the subfamily<br />
              &nbsp;&nbsp;&lt;b&gt;Hydrochoerinae&lt;/b&gt; along with ...<br />
              &lt;/p&gt;

        %section
          %h2
            %code p:last-child { ... }

          %div
            %code(data-trim)
              <br />
              &lt;h1&gt;About Capybaras&lt;/h1&gt;<br />
              <br />
              &lt;p class="introduction"&gt;<br />
              &nbsp;&nbsp;The <span class="foo">capybara</span> is the largest &lt;b&gt;rodent&lt;/b&gt;<br />
              &nbsp;&nbsp;in the world.<br />
              &lt;/p&gt;<br />
              <br />
              %em
                &lt;p&gt;<br />
                &nbsp;&nbsp;The &lt;i&gt;capybara&lt;/i&gt; belongs to the subfamily<br />
                &nbsp;&nbsp;&lt;b&gt;Hydrochoerinae&lt;/b&gt; along with ...<br />
                &lt;/p&gt;

        %section
          %h2
            %code h1, p:last-child { ... }

          %div
            %code(data-trim)
              <br />
              %em
                &lt;h1&gt;About Capybaras&lt;/h1&gt;<br />
              <br />
              &lt;p class="introduction"&gt;<br />
              &nbsp;&nbsp;The <span class="foo">capybara</span> is the largest &lt;b&gt;rodent&lt;/b&gt;<br />
              &nbsp;&nbsp;in the world.<br />
              &lt;/p&gt;<br />
              <br />
              %em
                &lt;p&gt;<br />
                &nbsp;&nbsp;The &lt;i&gt;capybara&lt;/i&gt; belongs to the subfamily<br />
                &nbsp;&nbsp;&lt;b&gt;Hydrochoerinae&lt;/b&gt; along with ...<br />
                &lt;/p&gt;

        -# %section
        -#   %h2
        -#     %code h1+p { ... }
        -#
        -#   %div
        -#     %code(data-trim)
        -#       <br />
        -#       &lt;h1&gt;About Capybaras&lt;/h1&gt;<br />
        -#       <br />
        -#       %em
        -#         &lt;p class="introduction"&gt;<br />
        -#         &nbsp;&nbsp;The <span class="foo">capybara</span> is the largest &lt;b&gt;rodent&lt;/b&gt;<br />
        -#         &nbsp;&nbsp;in the world.<br />
        -#         &lt;/p&gt;<br />
        -#         <br />
        -#       &lt;p&gt;<br />
        -#       &nbsp;&nbsp;The &lt;i&gt;capybara&lt;/i&gt; belongs to the subfamily<br />
        -#       &nbsp;&nbsp;&lt;b&gt;Hydrochoerinae&lt;/b&gt; along with ...<br />
        -#       &lt;/p&gt;


        %section
          %h2
            %code b { ... }

          %div
            %code(data-trim)
              <br />
              &lt;h1&gt;About Capybaras&lt;/h1&gt;<br />
              <br />
              &lt;p class="introduction"&gt;<br />
              &nbsp;&nbsp;The <span class="foo">capybara</span> is the largest <em>&lt;b&gt;rodent&lt;/b&gt;</em><br />
              &nbsp;&nbsp;in the world.<br />
              &lt;/p&gt;<br />
              <br />
              &lt;p&gt;<br />
              &nbsp;&nbsp;The &lt;i&gt;capybara&lt;/i&gt; belongs to the subfamily<br />
              &nbsp;&nbsp;<em>&lt;b&gt;Hydrochoerinae&lt;/b&gt;</em> along with ...<br />
              &lt;/p&gt;

        %section
          %h2
            %code p.introduction b { ... }

          %div
            %code(data-trim)
              <br />
              &lt;h1&gt;About Capybaras&lt;/h1&gt;<br />
              <br />
              &lt;p class="introduction"&gt;<br />
              &nbsp;&nbsp;The <span class="foo">capybara</span> is the largest <em>&lt;b&gt;rodent&lt;/b&gt;</em><br />
              &nbsp;&nbsp;in the world.<br />
              &lt;/p&gt;<br />
              <br />
              &lt;p&gt;<br />
              &nbsp;&nbsp;The &lt;i&gt;capybara&lt;/i&gt; belongs to the subfamily<br />
              &nbsp;&nbsp;&lt;b&gt;Hydrochoerinae&lt;/b&gt; along with ...<br />
              &lt;/p&gt;

        %section
          %h2
            %code p:has(i) { ... }

          %div
            %code(data-trim)
              <br />
              &lt;h1&gt;About Capybaras&lt;/h1&gt;<br />
              <br />
              &lt;p class="introduction"&gt;<br />
              &nbsp;&nbsp;The <span class="foo">capybara</span> is the largest &lt;b&gt;rodent&lt;/b&gt;<br />
              &nbsp;&nbsp;in the world.<br />
              &lt;/p&gt;<br />
              <br />
              <em>&lt;p&gt;<br />
              &nbsp;&nbsp;The &lt;i&gt;capybara&lt;/i&gt; belongs to the subfamily<br />
              &nbsp;&nbsp;&lt;b&gt;Hydrochoerinae&lt;/b&gt; along with ...<br />
              &lt;/p&gt;</em>

        %section
          %h2 The box model

          %img(src='pictures/box_model.png' height=250)

          %p
            %a(target='_blank' href='examples/1055_box_model/page.html') View example

        -#%section
        -#  %h2 Positioning
        -#
        -#  %img(src='pictures/screenshot_positioning.png' height=300)
        -#
        -#  %p
        -#    %a(target='_blank' href='examples/1066_positioning/page.html') View example
        -#
        -#%section
        -#  %h3
        -#    Putting elements side-by-side
        -#    .subtle
        -#      With positioning
        -#
        -#  %img(src='pictures/screenshot_layout.png' height=300)
        -#
        -#  %p
        -#    %a(target='_blank' href='examples/1070_layout') View example

        %section
          %h2
            Layout with Flexbox

          %img(src='pictures/screenshot_layout.png' height=300)

          %p
            %a(target='_blank' href='examples/1071_layout_with_flexbox') View example

        :plain
          <section class="flexbox">
            <h2>Block elements stack</h2>

            <pre><code data-trim class="css">
          .container {
            display: block; /* default */
          }
            </code></pre>
            <div class="container" style="">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>Flexbox children are columns</h2>

            <pre><code data-trim class="css">
          .container {
            display: flex;
          }
            </code></pre>
            <div class="container" style="display: flex;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>justify-content</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            justify-content: flex-start; /* default */
          }
            </code></pre>
            <div class="container" style="display: flex; justify-content: flex-start;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>justify-content</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            justify-content: flex-end;
          }
            </code></pre>
            <div class="container" style="display: flex; justify-content: flex-end;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>justify-content</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            justify-content: space-between;
          }
            </code></pre>
            <div class="container" style="display: flex; justify-content: space-between;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>justify-content</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            justify-content: space-around;
          }
            </code></pre>
            <div class="container" style="display: flex; justify-content: space-around;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>justify-content</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            justify-content: center;
          }
            </code></pre>
            <div class="container" style="display: flex; justify-content: center;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>Pushing siblings</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
          }
          .child:nth-child(1) {
            margin-right: auto;
          }
            </code></pre>
            <div class="container" style="display: flex;">
              <div class="child" style="margin-right: auto"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <!--
          <section class="flexbox">
            <h2>Pushing siblings</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
          }
          .child:nth-child(2) {
            margin-left: auto;
            margin-right: auto;
          }
            </code></pre>
            <div class="container" style="display: flex;">
              <div class="child"></div>
              <div class="child" style="margin-left: auto; margin-right: auto;"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>
          -->

          <section class="flexbox">
            <h2>flex-grow</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
          }
          .child {
            flex-grow: 1;
          }
            </code></pre>
            <div class="container" style="display: flex;">
              <div class="child" style="flex-grow: 1;"></div>
              <div class="child" style="flex-grow: 1;"></div>
              <div class="child" style="flex-grow: 1;"></div>
              <div class="child" style="flex-grow: 1;"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>flex-grow</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
          }
          .child:nth-child(2) {
            flex-grow: 1;
          }
            </code></pre>
            <div class="container" style="display: flex;">
              <div class="child"></div>
              <div class="child" style="flex-grow: 1;"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>flex-grow</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
          }
          .child:nth-child(1) {
            flex-grow: 1;
          }
          .child:nth-child(2) {
            flex-grow: 2;
          }
            </code></pre>
            <div class="container" style="display: flex;">
              <div class="child"></div>
              <div class="child" style="flex-grow: 1;"></div>
              <div class="child" style="flex-grow: 2;"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>flex-basis</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
          }
          .child {
            flex-basis: 200px;
          }
            </code></pre>
            <div class="container" style="display: flex;">
              <div class="child" style="flex-basis: 200px;"></div>
              <div class="child" style="flex-basis: 200px;"></div>
              <div class="child" style="flex-basis: 200px;"></div>
              <div class="child" style="flex-basis: 200px;"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>flex-basis</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
          }
          .child {
            flex-basis: 200px;
          }
          .child:nth-child(2) {
            flex-grow: 1;
          }
            </code></pre>
            <div class="container" style="display: flex;">
              <div class="child" style="flex-basis: 200px;"></div>
              <div class="child" style="flex-basis: 200px; flex-grow: 1;"></div>
              <div class="child" style="flex-basis: 200px;"></div>
              <div class="child" style="flex-basis: 200px;"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>Many elements</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
          }
            </code></pre>
            <div class="container" style="display: flex;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>Many elements</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
          }
          .child {
            flex-shrink: 0;
          }
            </code></pre>
            <div class="container" style="display: flex;">
              <div class="child" style="flex-shrink: 0;"></div>
              <div class="child" style="flex-shrink: 0;"></div>
              <div class="child" style="flex-shrink: 0;"></div>
              <div class="child" style="flex-shrink: 0;"></div>
              <div class="child" style="flex-shrink: 0;"></div>
              <div class="child" style="flex-shrink: 0;"></div>
              <div class="child" style="flex-shrink: 0;"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>Many elements</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            flex-wrap: wrap;
          }
            </code></pre>
            <div class="container" style="display: flex; flex-wrap: wrap;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>Many elements</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            flex-wrap: wrap;
          }
          .child {
            flex-basis: 25%;
          }
            </code></pre>
            <div class="container" style="display: flex; flex-wrap: wrap;">
              <div class="child" style="flex-basis: 25%;"></div>
              <div class="child" style="flex-basis: 25%;"></div>
              <div class="child" style="flex-basis: 25%;"></div>
              <div class="child" style="flex-basis: 25%;"></div>
              <div class="child" style="flex-basis: 25%;"></div>
              <div class="child" style="flex-basis: 25%;"></div>
              <div class="child" style="flex-basis: 25%;"></div>
            </div>
          </section>

          <!--
          <section class="flexbox">
            <h2>Many elements</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            flex-wrap: wrap;
          }
          .child {
            flex-basis: 25%;
            flex-grow: 1;
          }
            </code></pre>
            <div class="container" style="display: flex; flex-wrap: wrap;">
              <div class="child" style="flex-basis: 25%; flex-grow: 1"></div>
              <div class="child" style="flex-basis: 25%; flex-grow: 1"></div>
              <div class="child" style="flex-basis: 25%; flex-grow: 1"></div>
              <div class="child" style="flex-basis: 25%; flex-grow: 1"></div>
              <div class="child" style="flex-basis: 25%; flex-grow: 1"></div>
              <div class="child" style="flex-basis: 25%; flex-grow: 1"></div>
              <div class="child" style="flex-basis: 25%; flex-grow: 1"></div>
            </div>
          </section>
          -->

          <!--
          <section class="flexbox">
            <h2>flex</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
          }
          .child {
            flex-grow: 0; /* default */
            flex-shrink: 1; /* default */
            flex-basis: auto; /* default */
          }
             </code></pre>
            <div class="container" style="display: flex;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>flex</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
          }
          .child {
            flex: 0 1 auto; /* default */
          }
            </code></pre>
            <div class="container" style="display: flex;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>flex</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            flex-wrap: wrap;
          }
          .child {
            flex: 0 0 250px;
          }
            </code></pre>
            <div class="container" style="display: flex; flex-wrap: wrap;">
              <div class="child" style="flex: 0 0 250px;"></div>
              <div class="child" style="flex: 0 0 250px;"></div>
              <div class="child" style="flex: 0 0 250px;"></div>
              <div class="child" style="flex: 0 0 250px;"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>flex</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            flex-wrap: wrap;
          }
          .child {
            flex: 1 0 250px;
          }
            </code></pre>
            <div class="container" style="display: flex; flex-wrap: wrap;">
              <div class="child" style="flex: 1 0 250px;"></div>
              <div class="child" style="flex: 1 0 250px;"></div>
              <div class="child" style="flex: 1 0 250px;"></div>
              <div class="child" style="flex: 1 0 250px;"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>flex</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            flex-wrap: wrap;
          }
          .child {
            flex: 0 0 33.33%;
          }
            </code></pre>
            <div class="container" style="display: flex; flex-wrap: wrap;">
              <div class="child" style="flex: 0 0 33.33%;"></div>
              <div class="child" style="flex: 0 0 33.33%;"></div>
              <div class="child" style="flex: 0 0 33.33%;"></div>
              <div class="child" style="flex: 0 0 33.33%;"></div>
            </div>
          </section>
          -->

          <section class="flexbox">
            <h2>flex-direction</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            flex-direction: row;
          }
            </code></pre>
            <div class="container" style="display: flex; flex-direction: row;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <!--
          <section class="flexbox">
            <h2>flex-direction</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            flex-direction: row-reverse;
          }
            </code></pre>
            <div class="container" style="display: flex; flex-direction: row-reverse;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>
          -->

          <section class="flexbox">
            <h2>flex-direction</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            flex-direction: column;
          }
            </code></pre>
            <div class="container" style="display: flex; flex-direction: column;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <!--
          <section class="flexbox">
            <h2>flex-direction</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            flex-direction: column-reverse;
          }
            </code></pre>
            <div class="container" style="display: flex; flex-direction: column-reverse;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>
          -->

          <section class="flexbox">
            <h2>align-items</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            height: 200px;
            align-items: stretch; /* default */
          }
            </code></pre>
            <div class="container" style="display: flex; height: 200px;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>align-items</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            height: 200px;
            align-items: flex-start;
          }
            </code></pre>
            <div class="container" style="display: flex; height: 200px; align-items: flex-start;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>align-items</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            height: 200px;
            align-items: flex-end;
          }
            </code></pre>
            <div class="container" style="display: flex; height: 200px; align-items: flex-end;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>align-items</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            height: 200px;
            align-items: center;
          }
            </code></pre>
            <div class="container" style="display: flex; height: 200px; align-items: center;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <section class="flexbox">
            <h2>align-items</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            height: 200px;
            align-items: center;
          }
          .child:nth-child(2) {
            align-self: stretch;
          }
            </code></pre>
            <div class="container" style="display: flex; height: 200px; align-items: center;">
              <div class="child"></div>
              <div class="child" style="align-self: stretch;"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>

          <!--
          <section class="flexbox">
            <h2>align-items</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: flex;
            height: 200px;
            align-items: center;
            justify-content: center;
          }
            </code></pre>
            <div class="container" style="display: flex; height: 200px; align-items: center; justify-content: center;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
          </section>
          -->

          <!--
          <section class="flexbox">
            <h2>inline-flex</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: inline-flex;
          }
            </code></pre>

            Hello
            <div class="container" style="display: inline-flex; width: auto;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
            World
          </section>

          <section class="flexbox">
            <h2>inline-flex</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: inline-flex;
            width: 600px;
          }
            </code></pre>

            Hello
            <div class="container" style="display: inline-flex; width: 600px;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
            World
          </section>

          <section class="flexbox">
            <h2>inline-flex</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: inline-flex;
            width: 600px;
            justify-content: space-between;
          }
            </code></pre>

            Hello
            <div class="container" style="display: inline-flex; width: 600px; justify-content: space-between;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
            World
          </section>

          <section class="flexbox">
            <h2>inline-flex</h2>

            <pre class=""><code data-trim class="css">
          .container {
            display: inline-flex;
            width: 600px;
            justify-content: center;
          }
            </code></pre>

            Hello
            <div class="container" style="display: inline-flex; width: 600px; justify-content: center;">
              <div class="child"></div>
              <div class="child"></div>
              <div class="child"></div>
            </div>
            World
          </section>
          -->


        %section
          %h2 Flexbox resources

          %ul
            %li
              %a(href='https://web.dev/learn/css/flexbox/') Learn CSS: Flexbox
            %li
              %a(href='https://flexboxfroggy.com/') Flexbox Froggy: A game for learning Flexbox
            %li
              %a(href='https://css-tricks.com/snippets/css/a-guide-to-flexbox/') Flexbox Cheat Sheet

          %p
            Advanced users can take a look at <a href="https://makandracards.com/curriculum/525354-css-grids-2d">CSS grids</a>.

        %section
          %h2 CSS frameworks

          %p
            Instead of starting from scratch you can build upon someone else's CSS.
            %br
            CSS frameworks like <a href="https://getbootstrap.com/">Bootstrap</a>, <a href="https://bulma.io/">Bulma</a> or <a href="https://primer.style/">Primer</a> give you:

          %ul
            %li Normalized base styles
            %li Typography
            %li Grid system
            %li Form styles
            %li Components (cards, buttons, modals, tabs, etc.)
            %li Utility classes

          %p
            %a(target='_blank' href='https://getbootstrap.com') View example

        %section
          %h3 Utility-first CSS frameworks

          %p
            Frameworks like <a href="https://tailwindcss.com/">Tailwind</a> do not extract components like cards or buttons.
            They <i>only</i> offer utility classes:

          %pre
            %code.html
              :preserve
                <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                  Button
                </button>

          %p
            De-duplicate with a component system that abstracts away your HTML.
          %p
            Wouldn't recommend when you're just learning CSS.

        %section
          %h3 More CSS resources and exercises

          %ul
            %li
              %a(href='https://makandracards.com/curriculum/34343-css-basics-3d') Card: CSS Basics
            %li
              %a(href='https://web.dev/learn/css/') Learn CSS


        %section(data-background-color='var(--color-ash)')
          %h2 After the break

          %ul
            %li Server-side web apps
            %li JavaScript
            %li Client-side web apps

        %section(data-background-color='var(--color-galaxy)')

          %h2
            %span.subtle Server-side
            %br
            Web applications

        %section
          %p
            Let's write a web app that returns the current time:
          %pre
            %code.nohighlight(data-trim)
              http://timeapp.com/now.html

        %section

          %p
            Browser asks server:

          %pre.xs.fragment
            %code.nohighlight(data-trim)
              :preserve
                GET /now.html HTTP/1.1         # I want the file /now.html
                Host: timeapp.com              # I want it from timeapp.com
                Accept: text/html, text/plain  # I understand HTML and plain text

          %p.fragment
            Server looks for a local file <code>now.html</code> and replies:

          %pre.xs.fragment
            %code.nohighlight(data-trim)
              :preserve
                HTTP/1.1 200 OK                # I found what you wanted
                Content-Length: 22             # What you want has 22 bytes
                Content-Type: text/plain       # And it's in plain text
                                               # Here it comes:
                The time is 15:00:00.

          <br />&nbsp;
          <br />&nbsp;
          <br />&nbsp;

        %section

          %p
            Browser asks server:

          %pre.xs
            %code.nohighlight(data-trim)
              :preserve
                GET /now.html HTTP/1.1         # I want the file /now.html
                Host: timeapp.com              # I want it from timeapp.com
                Accept: text/html, text/plain  # I understand HTML and plain text

          %p
            %span.fragment
              Server runs a program <code>time.exe</code>.<br>
            %span.fragment
              The program <code>time.exe</code> writes a HTTP response
              %br
              with the current time to <code>STDOUT</code>:

          %pre.xs.fragment
            %code.ruby(data-trim)
              :preserve
                puts "HTTP/1.1 200 OK"
                puts "Content-Length: 22"
                puts "Content-Type: text/plain"
                puts
                puts "The time is " + Time.now.to_s


        %section
          %h3 Browser don't know about web apps!

          %p
            The browser simply makes a request and gets back a string of HTML (wrapped in HTTP).

          %p
            The browser <b>doesn't even know</b> if the HTML was generated by an app,
            %br
            or if it was simply read from a static file.

        %section
          %h3 You can write web apps in any language that can print text

          %p
            Popular choices:

          %ul
            %li Node.js
            %li Ruby
            %li Java
            %li C#
            %li PHP
            %li Python

          %p.fragment
            The following examples are in Ruby, but concepts apply to all languages.


        %section
          .columns
            .column
              %h3 Ruby
              %pre.xxs
                %code.ruby
                  :preserve
                    class User

                      def initialize(name, age)
                        @name = name
                        @age = age
                      end

                      def adult?
                        @age >= 18
                      end

                    end

                    user = User.new('Max', 18)
                    puts user.name
                    puts user.adult?

            .column
              %h3 Java
              %pre.xxs
                %code.java
                  :preserve
                    class User {

                      private String name;
                      private int age;

                      public User(name, age) {
                        this.name = name;
                        this.age = age;
                      }

                      public boolean isAdult() {
                        return age >= 18;
                      }

                    }

                    var user = new User("Max", 18);
                    System.out.println(user.getName());
                    System.out.println(user.isAdult());

        %section
          %h2 The chat app

          %ul
            %li
              %a(target='_blank' href='examples/2000_chat') View source

          %p
            To run the chat app:

          %pre
            %code.nohighlight(data-trim)
              :preserve
                cd examples/2000_chat
                bundle install
                bundle exec ruby app.rb

          %p
            You can now access the app at
            %a(href='http://localhost:4567/') http://localhost:4567/

        %section
          %p
            The user types into her address bar:
          %pre
            %code.nohighlight(data-trim)
              http://chatapp.com/
          %p
            What happens?

        %section

          %p
            Browser asks server:

          %pre.xs
            %code.nohighlight(data-trim)
              :preserve
                GET / HTTP/1.1                 # I want /
                Host: chatapp.com              # I want it from chatapp.com
                Accept: text/html, text/plain  # I understand HTML and plain text

          %p.fragment
            Server asks the program <code>app.rb</code> for <code>/</code>.<br>
          %p.fragment
            The program prints a new HTML page with the latest chat messages.
          %p.fragment
            The server takes the program output and sends it the browser:

          %pre.xs.fragment
            %code.nohighlight(data-trim)
              :preserve
                HTTP/1.1 200 OK                # I found what you wanted
                Content-Length: 1589           # What you want has 1589 bytes
                Content-Type: text/html        # And it's in HTML format
                                               # Here it comes:
                &lt;html&gt;
                  ...
                &lt;/html&gt;

        %section
          %p
            The user sends a message to the chat channel:
          %pre
            %code.nohighlight(data-trim)
              Hello world
          %p
            What happens?

        %section
          %p
            Browser asks server:

          %pre.xxs
            %code.nohighlight(data-trim)
              :preserve
                POST /send HTTP/1.1                              # I'm posting data to /send
                Host: chatapp.com                                # I'm posting it to chatapp.com
                Content-Type: application/x-www-form-urlencoded  # I'm posting key/value pairs
                                                                 # Here it comes:
                message=Hello+world

          %p.fragment
            Server calls the program <code>app.rb</code> with the posted data.
          %p.fragment
            The program stores the message and prints a HTTP response.
          %p.fragment
            The server takes the program output and sends it the browser:

          %pre.xs.fragment
            %code.nohighlight(data-trim)
              :preserve
                HTTP/1.1 303 See Other   # This conversation continues elsewhere
                Location: /              # Request / to continue

          %p.fragment
            The browser automatically makes another request to <code>/</code>
            and gets a fresh copy of the message list.

        %section
          %h2 Improving the<br>chat interface

          %ul
            %li
              When another user sends us a message,<br>
              we don't notice until we reload the page
            %li
              The message list should automatically scroll<br>
              to the most recent message at the bottom

          %p
            These things require code that runs in the browser, not on the server.



        %section(data-background-color='var(--color-galaxy)')
          %h2 JavaScript

        %section
          %pre.xxl
            %code.javascript(data-trim)
              :preserve
                // This is a comment

                let x = 1
                let y = x + 1

                console.log(y) // 2

          %p.fragment
            Try it in your browser console! (<code>CTRL+Shift+J</code>)

        %section
          %pre.xxl
            %code.javascript(data-trim)
              :preserve
                function square(n) {
                  return n * n
                }

                let x = square(16)
                console.log(x)    // 256

                let z = square
                console.log(z)    // function { ... }
                console.log(z(4)) // 16

        %section
          %h3
            HTML
          %pre.xs
            %code.html(data-trim)
              :preserve
                <div>
                  <p>one</p>
                  <p>two</p>
                  <p>three</p>
                </div>

          %h3 Browser API
          %pre.xs
            %code.javascript(data-trim)
              :preserve
                let div = document.querySelector('div')
                let children = div.children
                console.log(children) // [<p>one</p>, <p>two</p>, <p>three</p>]

                let parent = children[0].parentNode
                console.log(parent) // [<div>...</div>]
                console.log(parent === div) // true

                children[1].style.color = 'red'
          %p
            %a(target='_blank' href='examples/1150_browser_api/page.html') View example

        %section
          %h3
            How to link HTML and JavaScript
            %span.subtle (1)

          %pre
            %code.html(data-trim)
              :preserve
                &lt;html&gt;
                  &lt;body&gt;

                    <p>Hi world</p>

                    &lt;script&gt;
                      var x = 1;
                      var y = x + y;
                    &lt;/script&gt;

                  &lt;/body&gt;
                &lt;/html&gt;

        %section
          %h3
            How to link HTML and JavaScript
            %span.subtle (2)

          %pre
            %code.html(data-trim)
              :preserve
                &lt;html&gt;
                  &lt;body&gt;

                    <p>Hi world</p>

                    &lt;script src="scripts.js"&gt;&lt;/script&gt;




                  &lt;/body&gt;
                &lt;/html&gt;

        %section
          %h2 Events

          %pre
            %code.html(data-trim)
              :preserve
                &lt;button&gt;Click me&lt;/button&gt;

                &lt;script&gt;
                  let button = document.querySelector('button')
                  button.addEventListener('click', function(event) {
                    alert('Button was clicked!')
                  })

                  window.addEventListener(function(event) {
                    alert('User scrolled!')
                  })
                &lt;/script&gt;

          %p
            Client-side JavaScript that enhances server-rendered HTML
            is often called <i>Progressive Enhancement</i> or <i>JavaScript Sprinkles</i>.



        %section
          %h3.red JavaScript has sharp edges

          %ul
            %li Not everything is an object.
            %li There are three kinds of <code>null</code>.
            %li Equality of basic values is <a href="https://dorey.github.io/JavaScript-Equality-Table">confusing</a>.
            %li No built-in way to compare structured objects or arrays.
            %li Objects are hash maps. Calling undefined properties does not crash and returns <code>undefined</code>.
            %li Explicit <code>this.foo()</code> required to call your own methods.
            %li Arcane rules around <code>this</code>.
            %li Weak standard library (strings, numbers, arrays...).
            %li People are still arguing how one JavaScript file can load another.

          %p.subtle
            (But it's the only language we get in the browser, so deal with it.)

        %section
          %h2
            Progressive enhancement<br>for the chat
            %span.subtle (1)

        %section
          %h3 Scrolling to the bottom
          %pre.xs
            %code.javascript(data-trim)
              :preserve
                function showLastMessage() {
                  let lastMessage = document.querySelector('.message:last-child')
                  if (lastMessage) {
                    lastMessage.scrollIntoView()
                  }
                }

                window.addEventListener('load', showLastMessage)


        %section
          %h2
            Progressive enhancement<br>for the chat
            %span.subtle (2)

        %section
          %h2
            How do we notice when another user sends a message?<br>
            %span.red.fragment
              We don't

        %section
          %h2 Classic web applications<br>are a slide show

          %p
            ⇢ User requests a website<br>
            %span.green
              ⇠ Server sends a fresh copy
          %p
            ⇢ User clicks a link<br>
            %span.green
              ⇠ Server sends a fresh copy
          %p
            ⇢ User submits a form<br>
            %span.green
              ⇠ Server sends a fresh copy
          %p
            ⇢ User reloads the page manually<br>
            %span.green
              ⇠ Server sends a fresh copy
          %p
            ⇣ Another user sends a message<br>
            %span.red
              × Server has no way to push the update to the user

        %section
          %h3 Reloading messages with <code>fetch()</code>

          %pre.xs
            %code.javascript(data-trim)
              :preserve
                async function refresh() {
                  let response = await fetch('/')
                  let newHTML = await response.text()
                  let parser = new DOMParser()
                  let newDocument = parser.parseFromString(newHTML, 'text/html')
                  let newChannel = newDocument.querySelector('.channel')
                  let oldChannel = document.querySelector('.channel')
                  oldChannel.replaceWith(newChannel)
                }

                setInterval(refresh, 1000)

          %p
            Advanced users can take a look at <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket">WebSockets</a> or
            <a href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events">Server-Sent Events</a>.


        -# %section
        -#   %h2
        -#     Progressive enhancement<br>for the chat
        -#     %span.subtle (3)
        -#
        -# %section
        -#   %h3 Client-side search
        -#   %pre.xxxs
        -#     %code.javascript(data-trim)
        -#       :preserve
        -#         function search() {
        -#           let queryInput = document.querySelector('.search-form input')
        -#           let query = queryInput.value.toLowerCase()
        -#           let messageElements = document.querySelectorAll('.message')
        -#           for (let messageElement of messageElements) {
        -#             var text = messageElement.textContent.toLowerCase()
        -#             if (text.includes(query)) {
        -#               messageElement.style.display = 'block'
        -#             } else {
        -#               messageElement.style.display = 'none'
        -#             }
        -#           }
        -#         }
        -#
        -#         window.addEventListener('load', function() {
        -#           let queryInput = document.querySelector('.search-form input')
        -#           queryInput.addEventListener('input', search)
        -#         })



        %section
          %h2 The JavaScript-enhanced chat app

          %ul
            %li
              %a(target='_blank' href='examples/2010_chat_with_javascript') View source

          %p
            To run the chat app:

          %pre
            %code.nohighlight(data-trim)
              :preserve
                cd examples/2010_chat_with_javascript
                bundle install
                bundle exec ruby src/app.rb


        %section
          %h3 More JavaScript resources and exercises

          %ul
            %li
              %a(href='https://makandracards.com/curriculum/34347-javascript-basics-2d') Card: JavaScript Basics
            %li
              %a(href='https://makandracards.com/curriculum/508438-working-with-the-dom-1-5d') Card: Working with the DOM
            %li
              %a(href='https://makandracards.com/curriculum/35275-javascript-writing-asynchronous-code-2-5d') Card: Writing asynchronous code
            %li
              %a(href='https://makandracards.com/curriculum/34977-unobtrusive-javascript-components-3d') Card: Unobtrusive JavaScript components




        -#%section
        -#  %p
        -#    %img.plain(src='pictures/makandra/makandra-inverted.png' width='40%')
        -#
        -#  %p
        -#    Du hast Programmiererfahrung und möchtest
        -#    %br
        -#    Dein Studium mit Praxiserfahrung kombinieren?
        -#
        -#  %ul
        -#    %li
        -#      Abschlussarbeiten im Bereich Ruby &amp; Web
        -#    %li
        -#      Praktikum / Werkstudent
        -#    %li
        -#      Trainee-Programm
        -#      (<a href="http://start.makandra.de">start.makandra.de</a>)
        -#    %li
        -#      Reinschnuppern
        -#
        -#  %p
        -#    ➜
        -#    %a(href="mailto:info@makandra.de") info@makandra.de
        -#    (oder mich ansprechen)


        %section
          %h2
            Client-side web apps

          %p
            Also known as <b>Single-page apps</b> or <b>SPAs</b>.

          %ul
            %li
              HTML is rendered on the browser.
            %li
              Often implemented using a framework (React, Angular, Vue.js, Svelte)
            %li
              State lives in the client. State changes update the UI automatically.
            %li
              Server is reduced to a database with a JSON API.
            %li
              Optimistic rendering.


        -# %section
        -#   %h2 Minimal SPA example
        -#
        -#   %pre.xs
        -#     %code.javascript(data-trim)
        -#       :preserve
        -#         import { render } from 'https://esm.sh/preact@10.7.2'
        -#         import { useState } from 'https://esm.sh/preact@10.7.2/hooks'
        -#         import { html } from 'https://esm.sh/htm@3.0.4/preact'
        -#
        -#         function Counter() {
        -#           const [value, setValue] = useState(0)
        -#
        -#           return (
        -#             &lt;&gt;
        -#               &lt;div&gt;Counter: {value}&lt;/div&gt;
        -#               &lt;button onClick={() =&gt; setValue(value + 1)}&gt;Increment&lt;/button&gt
        -#               &lt;button onClick={() =&gt; setValue(value - 1)}&gt;Decrement&lt;/button&gt
        -#             &lt;/&gt;
        -#           )
        -#         }
        -#
        -#         render(<Counter />, document.body)


        %section
          %h2 Chat as an SPA

          %ul
            %li
              %a(target='_blank' href='examples/2020_chat_spa') View source

          %p
            To run the chat app:

          %pre
            %code.nohighlight(data-trim)
              :preserve
                cd examples/2020_chat_spa
                bundle install
                bundle exec ruby src/app.rb


        %section
          %h2
            Pick your trade-off

          %table
            %tr
              %th
              %th
                Server-side app
              %th
                Client-side app
            %tr
              %td
                <b>Code complexity</b>
              %td
                low
              %td
                high
            %tr
              %td
                <b>Language</b>
              %td
                your choice
              %td
                JavaScript
            %tr
              %td
                <b>Data access</b>
              %td
                sync
              %td
                async via API
            %tr
              %td
                <b>Initial load time</b>
              %td
                fast
              %td
                slow
            %tr
              %td
                <b>Optimistic rendering</b>
              %td
                duplicates logic
              %td
                view bound to client-side state
            %tr
              %td
                <b>Offline</b>
              %td
                very hard
              %td
                hard

          %p
            There are also hybrid solutions like<br>
            <a href="https://unpoly.com">Unpoly</a>, <a href="https://htmx.org/">htmx</a>
            or <a href="https://vercel.com/blog/understanding-react-server-components">React Server Components</a>.

        %section(data-background-color='#111')
          %h2 Questions?

          %h4 Get in touch

          %p
            %a.no-underline{:href => "https://twitter.com/triskweline"} @triskweline
            %br
            %a.no-underline{:href => "mailto:henning.koch@makandra.de"} henning.koch@makandra.de
          %h4 Slides

          %p
            %a.no-underline(href='http://webdev101.makandra.de') http://webdev101.makandra.de<br>
            %a.no-underline(href='https://github.com/makandra/webdev101') https://github.com/makandra/webdev101



        %section
          %h2 Improving <code>app.rb</code>

          %p
            Our current implementation has <code>app.rb</code> is a single script<br>
            with a lot of responsibilities:

          %ul
            %li Routing
            %li Storage
            %li Business logic

          %p
            As software engineers we always try to separate responsibilities
            into individual modules.

        %section

          %h3 Version 1

          %pre.xs
            %code.ruby(data-trim)
              :preserve
                get '/' do
                  @messages = File.read('messages.txt').lines
                  erb(:channel)
                end

                get '/send' do
                  message = params['message'] + "\n"
                  File.write('messages.txt', message, mode: 'a')
                  redirect('/')
                end
                &nbsp;
                &nbsp;
                &nbsp;
                &nbsp;
                &nbsp;
                &nbsp;

        -#%section
        -#
        -#  %h3 SQL database
        -#
        -#  %pre.xs
        -#    %code.nohighlight(data-trim)
        -#      :preserve
        -#        +----+----------------------------------+
        -#        | id | text                             |
        -#        +----+----------------------------------+
        -#        | 1  | Hello world                      |
        -#        | 2  | Anyone here?                     |
        -#        | 3  | Here goes another message        |
        -#        +----+----------------------------------+
        -#
        -#
        -#
        -#
        -#
        -#
        -#
        -#        &nbsp;

        %section

          %h3 SQL database

          %pre.xs
            %code.ruby(data-trim)
              :preserve
                db = Mydb::Client.new(host: 'localhost')

                get '/' do
                  @messages = db.select_values('SELECT text FROM messages')
                  erb(:channel)
                end

                get '/send' do
                  message = params['message']
                  escaped = db.escape(message)
                  db.execute('INSERT INTO messages VALUES (' + escaped + ')')
                  redirect('/')
                end
                &nbsp;
                &nbsp;
                &nbsp;

        %section

          .columns
            .column
              %h3 Controller

              %pre.xs
                %code.ruby(data-trim)
                  :preserve
                    channel = Channel.new

                    get '/' do
                      @messages = channel.messages
                      erb(:channel)
                    end

                    get '/send' do
                      message = params['message']
                      channel.add_message(message)
                      redirect('/')
                    end
                    &nbsp;
                    &nbsp;
                    &nbsp;
            .column
              %h3 Model

              %pre.xs
                %code.ruby(data-trim)
                  :preserve
                    class Channel

                      def initialize
                        @db = Mydb::Client.new
                      end

                      def messages
                        @db.select_values('SELECT text FROM messages')
                      end

                      def add_message(message)
                        escaped = @db.escape(message)
                        @db.execute('INSERT INTO messages VALUES (' + escaped + ')')
                      end

                    end

        %section
          %h2 Layer cake

          %table
            %tr
              %th
                Layer
              %th
                Responsibility
            %tr
              %td
                Database
              %td
                Data storage &amp; queries
            %tr
              %td
                Model
              %td
                O/R mapping, business logic
            %tr
              %td
                Controller
              %td
                Layer orchestration
            %tr
              %td
                View
              %td
                Content
            %tr
              %td
                Stylesheets
              %td
                Optics
                %span.subtle (optional)
            %tr
              %td
                JavaScript
              %td
                Behavior enhancements
                %span.subtle (optional)



        %section
          %pre.xxl
            %code.nohighlight(data-trim)
              telnet example.com 80


        %section
          %h2 Browser compatibility

          Your new friend:
          %a(href='http://caniuse.com/#search=navigation') caniuse.com
          %br

          %img(src='pictures/caniuse.png' height=370)

        %section
          %h2 Scaling the chat app

        %section
          .center
            %img(src='pictures/web_app_cluster.png' width=600)



    %script{:src => "lib/js/head.min.js"}
    %script{:src => "js/reveal.js"}
    :javascript
      // Full list of configuration options available at:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        controls: true,
        progress: true,
        history: true,
        center: true,

        transition: 'none', // none/fade/slide/convex/concave/zoom

        // Optional reveal.js plugins
        dependencies: [
          { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
          { src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'plugin/highlight/highlight.js', async: true, condition: function() { return !!document.querySelector( 'pre code' ); }, callback: function() { hljs.initHighlightingOnLoad(); } },
          { src: 'plugin/zoom-js/zoom.js', async: true },
          { src: 'plugin/notes/notes.js', async: true }
        ]
      });
